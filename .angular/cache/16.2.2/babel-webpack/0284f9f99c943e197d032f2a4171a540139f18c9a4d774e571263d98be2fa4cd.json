{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n      const email = emailControl.value;\n      const password = passwordControl.value;\n      this.authService.login(email, password).then(() => {\n        window.alert('Login successful'); // Add this line to show a popup message\n        this.router.navigate(['/welcome']); // Add this line to navigate to the welcome page\n      }).catch(error => {\n        // Handle the error\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","LoginComponent","constructor","authService","router","ngOnInit","loginForm","required","email","onLogin","valid","emailControl","get","passwordControl","value","password","login","then","window","alert","navigate","catch","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router'; // Add this import at the top\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router) { } \n\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n        return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n        const email = emailControl.value;\n        const password = passwordControl.value;\n        this.authService.login(email, password).then(() => {\n            window.alert('Login successful'); // Add this line to show a popup message\n            this.router.navigate(['/welcome']); // Add this line to navigate to the welcome page\n        }).catch(error => {\n            // Handle the error\n        });\n    }\n};\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAGxEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAC;MAC7B,OAAO,EAAE,IAAIC,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACvE,UAAU,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAEC,UAAU,CAACO,QAAQ;KACtD,CAAC;EACJ;EACAE,OAAOA,CAAA;IACL,IAAI,CAAC,IAAI,CAACH,SAAS,CAACI,KAAK,EAAE;MACvB;;IAEJ,MAAMC,YAAY,GAAG,IAAI,CAACL,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IAChD,MAAMC,eAAe,GAAG,IAAI,CAACP,SAAS,CAACM,GAAG,CAAC,UAAU,CAAC;IACtD,IAAID,YAAY,IAAIE,eAAe,EAAE;MACjC,MAAML,KAAK,GAAGG,YAAY,CAACG,KAAK;MAChC,MAAMC,QAAQ,GAAGF,eAAe,CAACC,KAAK;MACtC,IAAI,CAACX,WAAW,CAACa,KAAK,CAACR,KAAK,EAAEO,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAK;QAC9CC,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAClC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;QACb;MAAA,CACH,CAAC;;EAEV;CACC;AA7BYrB,cAAc,GAAAsB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWzB,cAAc,CA6B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}