{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AuthComponent = class AuthComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.signUpForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onLoginSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // Perform login action here\n    console.log(this.loginForm.value);\n  }\n  onSignUpSubmit() {\n    if (this.signUpForm.invalid) {\n      return;\n    }\n    // Perform sign-up action here\n    console.log(this.signUpForm.value);\n  }\n};\nAuthComponent = __decorate([Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})], AuthComponent);","map":{"version":3,"names":["Component","Validators","AuthComponent","constructor","formBuilder","ngOnInit","loginForm","group","username","required","password","signUpForm","email","onLoginSubmit","invalid","console","log","value","onSignUpSubmit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth\\auth.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n  loginForm!: FormGroup;\n  signUpForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onLoginSubmit(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    // Perform login action here\n    console.log(this.loginForm.value);\n  }\n\n  onSignUpSubmit(): void {\n    if (this.signUpForm.invalid) {\n      return;\n    }\n\n    // Perform sign-up action here\n    console.log(this.signUpForm.value);\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;IAEF,IAAI,CAACE,UAAU,GAAG,IAAI,CAACP,WAAW,CAACG,KAAK,CAAC;MACvCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCG,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDF,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAI,aAAaA,CAAA;IACX,IAAI,IAAI,CAACP,SAAS,CAACQ,OAAO,EAAE;MAC1B;;IAGF;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,SAAS,CAACW,KAAK,CAAC;EACnC;EAEAC,cAAcA,CAAA;IACZ,IAAI,IAAI,CAACP,UAAU,CAACG,OAAO,EAAE;MAC3B;;IAGF;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,UAAU,CAACM,KAAK,CAAC;EACpC;CACD;AApCYf,aAAa,GAAAiB,UAAA,EALzBnB,SAAS,CAAC;EACToB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWpB,aAAa,CAoCzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}