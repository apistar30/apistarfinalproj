{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.authService.getAuthState().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/add-account']);\n      }\n    });\n  }\n  register() {\n    if (this.registerEmail && this.registerPassword) {\n      this.authService.register(this.registerEmail, this.registerPassword).then(result => {\n        console.log('User registered');\n        console.log(result); // This will log the result of the registration\n        window.alert('Registered successfully'); // This will display the alert\n        this.registerEmail = '';\n        this.registerPassword = '';\n        this.router.navigate(['/login']); // navigate to add account page\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n}\n_class = RegisterComponent;\n_class.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"registerEmail\"], [\"type\", \"email\", \"id\", \"registerEmail\", \"name\", \"registerEmail\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"registerPassword\"], [\"type\", \"password\", \"id\", \"registerPassword\", \"name\", \"registerPassword\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Register\"], [\"routerLink\", \"/login\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.registerEmail = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.registerPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\")(14, \"input\", 5);\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \"Already have an account? \");\n      i0.ɵɵelementStart(17, \"a\", 6);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerEmail);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerPassword);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.RouterLink],\n  styles: [\"div[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    width: 300px;\\n    padding: 30px;\\n    border: 3px solid #0b0b0b;\\n    border-radius: 4px;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 4px;\\n    border: 1px solid #ccc;\\n}\\n\\ninput[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border-radius: 4px;\\n    border: none;\\n    background-color: #cc00ff;\\n    color: white;\\n    cursor: pointer;\\n}\\n\\ninput[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color:  #09ff00;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztJQUNULGdDQUFnQztJQUNoQyxZQUFZO0lBQ1osYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksMEJBQTBCO0FBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgIzBiMGIwYjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG5cclxuaDIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYzAwZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogICMwOWZmMDA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["RegisterComponent","constructor","authService","router","ngOnInit","getAuthState","subscribe","user","navigate","register","registerEmail","registerPassword","then","result","console","log","window","alert","catch","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_3_listener","ɵɵelement","RegisterComponent_Template_input_ngModelChange_7_listener","$event","RegisterComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\register\\register.component.ts","C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerEmail: string | undefined;\r\n  registerPassword: string | undefined;\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getAuthState().subscribe((user: any) => {\r\n      if (user) {\r\n        this.router.navigate(['/add-account']);\r\n      }\r\n    });\r\n  }\r\n\r\n  register() {\r\n    if (this.registerEmail && this.registerPassword) {\r\n      this.authService.register(this.registerEmail, this.registerPassword)\r\n        .then((result: any) => {\r\n          console.log('User registered');\r\n          console.log(result); // This will log the result of the registration\r\n          window.alert('Registered successfully'); // This will display the alert\r\n          this.registerEmail = '';\r\n          this.registerPassword = '';\r\n          this.router.navigate(['/login']); // navigate to add account page\r\n        }).catch((error: any) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n}","<!-- Register Form -->\r\n<div>\r\n    <h2>Register</h2>\r\n    <form (ngSubmit)=\"register()\">\r\n        <label for=\"registerEmail\">Email:</label><br>\r\n        <input type=\"email\" [(ngModel)]=\"registerEmail\" id=\"registerEmail\" name=\"registerEmail\"><br>\r\n        <label for=\"registerPassword\">Password:</label><br>\r\n        <input type=\"password\" [(ngModel)]=\"registerPassword\" id=\"registerPassword\" name=\"registerPassword\"><br>\r\n        <input type=\"submit\" value=\"Register\">\r\n    <p>Already have an account? <a routerLink=\"/login\">Login</a></p>\r\n    </form>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}