{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = ''; // Add this line\n  }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n      const email = emailControl.value;\n      const password = passwordControl.value;\n      this.authService.login(email, password).then(() => {\n        window.alert('Login successful');\n        this.router.navigate(['/post-list']);\n      }).catch(error => {\n        this.errorMessage = 'Wrong Password or E-mail'; // Change this line\n      });\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"login-form\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 3, \"input\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"input\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"routerLink\", \"/register\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"LOGIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_4_listener() {\n        return ctx.errorMessage = \"\";\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_5_listener() {\n        return ctx.errorMessage = \"\";\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, LoginComponent_p_8_Template, 2, 1, \"p\", 5);\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"Don't have an account? \");\n      i0.ɵɵelementStart(11, \"a\", 6);\n      i0.ɵɵtext(12, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i2.RouterLink, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n}\\n    .login-form[_ngcontent-%COMP%] {\\n        width: 300px;\\n        margin-left: auto;\\n        margin-right: auto;\\n        text-align: center;\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        width: 300px;\\n        padding: 30px;\\n        border: 3px solid black; \\n\\n        border-radius: 4px;\\n    }\\n\\n.login-form[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .login-form[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    border-radius: 4px;\\n    border: 3px solid #ccc;\\n}\\n\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border-radius: 4px;\\n    border: none;\\n    background-color: #cc00ff;\\n    color: rgb(255, 255, 255);\\n    cursor: pointer;\\n}\\n\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n    background-color:#09ff00;\\n}\\nbody[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7SUFDSTtRQUNJLFlBQVk7UUFDWixpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLGtCQUFrQjtRQUNsQixrQkFBa0I7UUFDbEIsUUFBUTtRQUNSLFNBQVM7UUFDVCxnQ0FBZ0M7UUFDaEMsWUFBWTtRQUNaLGFBQWE7UUFDYix1QkFBdUIsRUFBRSxrQkFBa0I7UUFDM0Msa0JBQWtCO0lBQ3RCOztBQUVKO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx3QkFBd0I7QUFDNUI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixTQUFTO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbiAgICAubG9naW4tZm9ybSB7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMzBweDtcclxuICAgICAgICBib3JkZXI6IDNweCBzb2xpZCBibGFjazsgLyogQWRkIHRoaXMgbGluZSAqL1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIH1cclxuXHJcbi5sb2dpbi1mb3JtIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgLmxvZ2luLWZvcm0gaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCAjY2NjO1xyXG59XHJcblxyXG4ubG9naW4tZm9ybSBidXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjMDBmZjtcclxuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbi1mb3JtIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMwOWZmMDA7XHJcbn1cclxuYm9keSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG1hcmdpbjogMDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","authService","router","ngOnInit","loginForm","required","email","onLogin","valid","emailControl","get","passwordControl","value","password","login","then","window","alert","navigate","catch","error","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_input_4_listener","LoginComponent_Template_input_input_5_listener","ɵɵtemplate","LoginComponent_p_8_Template","ɵɵproperty"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\login\\login.component.ts","C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\login\\login.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router'; // Add this import at the top\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  errorMessage: string = ''; // Add this line\n  constructor(private authService: AuthService, private router: Router) { } \n\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n      const email = emailControl.value;\n      const password = passwordControl.value;\n     this.authService.login(email, password).then(() => {\n  window.alert('Login successful');\n  this.router.navigate(['/post-list']);\n}).catch(error => {\n  this.errorMessage = 'Wrong Password or E-mail'; // Change this line\n});\n    }\n  }\n}","<div class=\"login-form\">\n    <h2>LOGIN</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" (input)=\"errorMessage = ''\">\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Password\" (input)=\"errorMessage = ''\">\n        <button type=\"submit\">Login</button>\n    </form>\n    <p *ngIf=\"errorMessage\">{{ errorMessage }}</p> <!-- Add this line -->\n    <p>Don't have an account? <a routerLink=\"/register\">Register</a></p>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}