{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthService = class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n  }\n  // add this method\n  getAuthState() {\n    return this.afAuth.authState;\n  }\n  // add this method\n  registerUser(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\n  }\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);","map":{"version":3,"names":["Injectable","AuthService","constructor","afAuth","getAuthState","authState","registerUser","email","password","createUserWithEmailAndPassword","__decorate","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private afAuth: AngularFireAuth) { }\r\n\r\n  // add this method\r\n  getAuthState(): Observable<firebase.User> {\r\n    return this.afAuth.authState;\r\n  }\r\n\r\n  // add this method\r\n  registerUser(email: string, password: string): Promise<firebase.auth.UserCredential> {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  // implement other methods (login, logout, etc.)\r\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YAAoBC,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;EAAqB;EAE/C;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,MAAM,CAACE,SAAS;EAC9B;EAEA;EACAC,YAAYA,CAACC,KAAa,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACL,MAAM,CAACM,8BAA8B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EACpE;CAGD;AAfYP,WAAW,GAAAS,UAAA,EAHvBV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWV,WAAW,CAevB"},"metadata":{},"sourceType":"module","externalDependencies":[]}