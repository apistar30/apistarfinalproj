{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n      const email = emailControl.value;\n      const password = passwordControl.value;\n      this.authService.login(email, password).then(() => {\n        window.alert('Login successful'); // Add this line to show a popup message\n        this.router.navigate(['/welcome']); // Add this line to navigate to the welcome page\n      }).catch(error => {\n        // Handle the error\n      });\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"login-form\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"LOGIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3);\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 49:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(5:1) C:\\\\\\\\Users\\\\\\\\gutie\\\\\\\\angularProjects\\\\\\\\crud\\\\\\\\src\\\\\\\\app\\\\\\\\login\\\\\\\\login.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 3 | \\\\u001b[39m    margin-bottom\\\\u001b[33m:\\\\u001b[39m 20px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 4 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 5 | \\\\u001b[39m\\\\u001b[33m.login-form\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 6 | \\\\u001b[39m    \\\\u001b[33m.login-form\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m 7 | \\\\u001b[39m        width\\\\u001b[33m:\\\\u001b[39m 300px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[49]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","LoginComponent","constructor","authService","router","ngOnInit","loginForm","required","email","onLogin","valid","emailControl","get","passwordControl","value","password","login","then","window","alert","navigate","catch","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\login\\login.component.ts","C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router'; // Add this import at the top\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router) { } \n\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (!this.loginForm.valid) {\n        return;\n    }\n    const emailControl = this.loginForm.get('email');\n    const passwordControl = this.loginForm.get('password');\n    if (emailControl && passwordControl) {\n        const email = emailControl.value;\n        const password = passwordControl.value;\n        this.authService.login(email, password).then(() => {\n            window.alert('Login successful'); // Add this line to show a popup message\n            this.router.navigate(['/welcome']); // Add this line to navigate to the welcome page\n        }).catch(error => {\n            // Handle the error\n        });\n    }\n};\n}\n","<div class=\"login-form\">\n    <h2>LOGIN</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <input type=\"email\" formControlName=\"email\" placeholder=\"Email\">\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Password\">\n        <button type=\"submit\">Login</button>\n    </form>\n</div>\n"],"mappings":";AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAGxEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAC;MAC7B,OAAO,EAAE,IAAIC,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACvE,UAAU,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAEC,UAAU,CAACO,QAAQ;KACtD,CAAC;EACJ;EACAE,OAAOA,CAAA;IACL,IAAI,CAAC,IAAI,CAACH,SAAS,CAACI,KAAK,EAAE;MACvB;;IAEJ,MAAMC,YAAY,GAAG,IAAI,CAACL,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IAChD,MAAMC,eAAe,GAAG,IAAI,CAACP,SAAS,CAACM,GAAG,CAAC,UAAU,CAAC;IACtD,IAAID,YAAY,IAAIE,eAAe,EAAE;MACjC,MAAML,KAAK,GAAGG,YAAY,CAACG,KAAK;MAChC,MAAMC,QAAQ,GAAGF,eAAe,CAACC,KAAK;MACtC,IAAI,CAACX,WAAW,CAACa,KAAK,CAACR,KAAK,EAAEO,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAK;QAC9CC,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAClC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;QACb;MAAA,CACH,CAAC;;EAEV;;SA5BarB,cAAc;;mBAAdA,MAAc,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAd3B,MAAc;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BZ,EAAA,CAAAc,cAAA,aAAwB;MAChBd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACdhB,EAAA,CAAAc,cAAA,cAAqD;MAAvBd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;QAAA,OAAYL,GAAA,CAAA3B,OAAA,EAAS;MAAA,EAAC;MAChDc,EAAA,CAAAmB,SAAA,eAAgE;MAEhEnB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAHlChB,EAAA,CAAAoB,SAAA,GAAuB;MAAvBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAA9B,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}