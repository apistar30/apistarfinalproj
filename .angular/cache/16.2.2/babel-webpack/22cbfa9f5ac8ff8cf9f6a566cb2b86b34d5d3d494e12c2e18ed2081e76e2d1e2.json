{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Post } from '../post.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../back-end.service\";\nexport class PostEditComponent {\n  constructor(postService, router, backEndService, actRoute) {\n    this.postService = postService;\n    this.router = router;\n    this.backEndService = backEndService;\n    this.actRoute = actRoute;\n    this.index = 0;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe(params => {\n      if (params['index']) {\n        console.log(params['index']);\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    });\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post = new Post(title, imgPath, description, 'JC JC JC', new Date(), 0);\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    } else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list']);\n  }\n}\n_class = PostEditComponent;\n_class.ɵfac = function PostEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BackEndService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post-edit\"]],\n  decls: 0,\n  vars: 0,\n  template: function PostEditComponent_Template(rf, ctx) {},\n  styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{\\n  border: 1px solid #d44d09;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdC1lZGl0L3Bvc3QtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkLCB0ZXh0YXJlYS5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2Q0NGQwOTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","Post","PostEditComponent","constructor","postService","router","backEndService","actRoute","index","editMode","ngOnInit","title","imgPath","description","params","subscribe","console","log","postSpec","getSpecPost","form","required","onSubmit","value","post","Date","updatePost","addPost","saveData","navigate","i0","ɵɵdirectiveInject","i1","PostService","i2","Router","i3","BackEndService","ActivatedRoute","selectors","decls","vars","template","PostEditComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post-edit\\post-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../post.service';\nimport { Post } from '../post.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { BackEndService } from '../back-end.service';\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n  index: number = 0;\n  form!: FormGroup;\n  editMode = false;\n  constructor(private postService: PostService, private router: Router,\n   private backEndService: BackEndService, private actRoute: ActivatedRoute) { }\n  ngOnInit(): void {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe((params: Params) => {\n      if (params['index']) {\n        console.log(params['index'])\n\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    }\n    );\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post: Post = new Post(\n      title, imgPath, description, 'JC JC JC', new Date(), 0\n    );\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    }\n    else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list'])\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}