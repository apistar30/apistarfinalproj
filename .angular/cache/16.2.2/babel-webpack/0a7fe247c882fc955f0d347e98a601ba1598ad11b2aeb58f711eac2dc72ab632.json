{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let PostComponent = class PostComponent {\n  constructor(postService, router) {\n    this.postService = postService;\n    this.router = router;\n    this.memberName = \"KING OG\";\n    this.index = 0;\n    this.comments = [];\n    this.editingCommentIndex = null;\n  }\n  ngOnInit() {\n    console.log(this.post);\n    this.comments = this.postService.getComments(this.index);\n  }\n  delete() {\n    this.postService.deleteButton(this.index);\n  }\n  onEdit() {\n    this.router.navigate(['/post-edit', this.index]);\n  }\n  onLike() {\n    this.postService.likePost(this.index);\n  }\n  onAddComment(comment) {\n    this.postService.addComment(this.index, comment);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n\n  editComment(commentIndex, newComment) {\n    this.postService.editComment(this.index, commentIndex, newComment);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n\n  deleteComment(commentIndex) {\n    this.postService.deleteComment(this.index, commentIndex);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n\n  startEditingComment(commentIndex) {\n    this.editingCommentIndex = commentIndex;\n  }\n  saveEditedComment(commentIndex, newComment) {\n    this.editComment(commentIndex, newComment);\n    this.editingCommentIndex = null;\n  }\n  onDislike() {\n    this.postService.dislikePost(this.index);\n  }\n};\n__decorate([Input()], PostComponent.prototype, \"index\", void 0);\n__decorate([Input()], PostComponent.prototype, \"post\", void 0);\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})], PostComponent);","map":{"version":3,"names":["Component","Input","PostComponent","constructor","postService","router","memberName","index","comments","editingCommentIndex","ngOnInit","console","log","post","getComments","delete","deleteButton","onEdit","navigate","onLike","likePost","onAddComment","comment","addComment","editComment","commentIndex","newComment","deleteComment","startEditingComment","saveEditedComment","onDislike","dislikePost","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post\\post.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostService } from '../post.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  commentInput: any;\n  memberName = \"KING OG\";\n\n  constructor(private postService: PostService, private router: Router) {\n  }\n  @Input() index: number = 0;\n  @Input() post?: Post;\n  comments: string[] = [];\n\n  ngOnInit(): void {\n    console.log(this.post);\n    this.comments = this.postService.getComments(this.index);\n  }\n  delete() {\n    this.postService.deleteButton(this.index);\n  }\n  \n  onEdit() {\n    this.router.navigate(['/post-edit', this.index])\n  }\n  onLike() {\n    this.postService.likePost(this.index)\n  }\n \n  onAddComment(comment: string) {\n    this.postService.addComment(this.index, comment);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n  \n  editComment(commentIndex: number, newComment: string) {\n    this.postService.editComment(this.index, commentIndex, newComment);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n  \n  deleteComment(commentIndex: number) {\n    this.postService.deleteComment(this.index, commentIndex);\n    this.comments = this.postService.getComments(this.index); // Refresh the comments\n  }\n  startEditingComment(commentIndex: number) {\n    this.editingCommentIndex = commentIndex;\n  }\n  editingCommentIndex: number | null = null;\n  saveEditedComment(commentIndex: number, newComment: string) {\n    this.editComment(commentIndex, newComment);\n    this.editingCommentIndex = null;\n  }\n  onDislike() {\n    this.postService.dislikePost(this.index);\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AAUjD,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAIxBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF5D,KAAAC,UAAU,GAAG,SAAS;IAIb,KAAAC,KAAK,GAAW,CAAC;IAE1B,KAAAC,QAAQ,GAAa,EAAE;IAkCvB,KAAAC,mBAAmB,GAAkB,IAAI;EArCzC;EAKAC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;IACtB,IAAI,CAACL,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACU,WAAW,CAAC,IAAI,CAACP,KAAK,CAAC;EAC1D;EACAQ,MAAMA,CAAA;IACJ,IAAI,CAACX,WAAW,CAACY,YAAY,CAAC,IAAI,CAACT,KAAK,CAAC;EAC3C;EAEAU,MAAMA,CAAA;IACJ,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAACX,KAAK,CAAC,CAAC;EAClD;EACAY,MAAMA,CAAA;IACJ,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,IAAI,CAACb,KAAK,CAAC;EACvC;EAEAc,YAAYA,CAACC,OAAe;IAC1B,IAAI,CAAClB,WAAW,CAACmB,UAAU,CAAC,IAAI,CAAChB,KAAK,EAAEe,OAAO,CAAC;IAChD,IAAI,CAACd,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACU,WAAW,CAAC,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC;EAC5D;;EAEAiB,WAAWA,CAACC,YAAoB,EAAEC,UAAkB;IAClD,IAAI,CAACtB,WAAW,CAACoB,WAAW,CAAC,IAAI,CAACjB,KAAK,EAAEkB,YAAY,EAAEC,UAAU,CAAC;IAClE,IAAI,CAAClB,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACU,WAAW,CAAC,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC;EAC5D;;EAEAoB,aAAaA,CAACF,YAAoB;IAChC,IAAI,CAACrB,WAAW,CAACuB,aAAa,CAAC,IAAI,CAACpB,KAAK,EAAEkB,YAAY,CAAC;IACxD,IAAI,CAACjB,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACU,WAAW,CAAC,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC;EAC5D;;EACAqB,mBAAmBA,CAACH,YAAoB;IACtC,IAAI,CAAChB,mBAAmB,GAAGgB,YAAY;EACzC;EAEAI,iBAAiBA,CAACJ,YAAoB,EAAEC,UAAkB;IACxD,IAAI,CAACF,WAAW,CAACC,YAAY,EAAEC,UAAU,CAAC;IAC1C,IAAI,CAACjB,mBAAmB,GAAG,IAAI;EACjC;EACAqB,SAASA,CAAA;IACP,IAAI,CAAC1B,WAAW,CAAC2B,WAAW,CAAC,IAAI,CAACxB,KAAK,CAAC;EAC1C;CACD;AA5CUyB,UAAA,EAAR/B,KAAK,EAAE,C,2CAAmB;AAClB+B,UAAA,EAAR/B,KAAK,EAAE,C,0CAAa;AAPVC,aAAa,GAAA8B,UAAA,EALzBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWjC,aAAa,CAkDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}