{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post-edit\\post-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../post.service';\nimport { Post } from '../post.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport{}\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n  index: number = 0;\n  form!: FormGroup;\n  editMode = false;\n  constructor(private postService: PostService, private router: Router,\n    private actRoute: ActivatedRoute) { }\n  ngOnInit(): void {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe((params: Params) => {\n      if (params['index']) {\n        console.log(params['index'])\n\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    }\n    );\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post: Post = new Post(\n      title, imgPath, description, 'JC JC JC', new Date(), 0\n    );\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    }\n    else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list'])\n  }\n}"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}