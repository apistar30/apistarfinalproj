{"ast":null,"code":"var _class;\nimport { auth } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n    this.afAuth.setPersistence(auth.Auth.Persistence.LOCAL);\n  }\n  // add this method\n  getAuthState() {\n    return this.afAuth.authState;\n  }\n  login(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n  register(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["auth","AuthService","constructor","afAuth","setPersistence","Auth","Persistence","LOCAL","getAuthState","authState","login","email","password","signInWithEmailAndPassword","register","createUserWithEmailAndPassword","i0","ɵɵinject","i1","AngularFireAuth","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { auth } from 'firebase/auth';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private afAuth: AngularFireAuth) {\r\n    this.afAuth.setPersistence(auth.Auth.Persistence.LOCAL);\r\n  }\r\n\r\n  // add this method\r\n  getAuthState(): Observable<auth.User | null> {\r\n    return this.afAuth.authState;\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  register(email: string, password: string) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n}"],"mappings":";AAEA,SAASA,IAAI,QAAQ,eAAe;;;AAMpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;IACxB,IAAI,CAACA,MAAM,CAACC,cAAc,CAACJ,IAAI,CAACK,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC;EACzD;EAEA;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,MAAM,CAACM,SAAS;EAC9B;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACT,MAAM,CAACU,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAChE;EAEAE,QAAQA,CAACH,KAAa,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACT,MAAM,CAACY,8BAA8B,CAACJ,KAAK,EAAEC,QAAQ,CAAC;EACpE;;SAjBWX,WAAW;;mBAAXA,MAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;;SAAXlB,MAAW;EAAAmB,OAAA,EAAXnB,MAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}