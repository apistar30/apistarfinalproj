{"ast":null,"code":"import { __decorate } from \"tslib\";\nexport let BackEndService = class BackEndService {\n  constructor(postService, http) {\n    this.postService = postService;\n    this.http = http;\n  }\n  saveData() {\n    const listofPosts = this.postService.getPost();\n    this.http.put('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json', listofPosts).subscribe(res => {\n      console.log(res);\n      // Call setPosts after saving the new post\n      this.postService.setPosts(listofPosts);\n    });\n  }\n  fetchData() {\n    return this.http.get('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json').pipe(tap(listofPosts => {\n      console.log(listofPosts);\n      listofPosts.forEach(post => {\n        if (!Array.isArray(post.comments)) {\n          post.comments = [];\n        }\n      });\n      this.postService.setPosts(listofPosts);\n      this.postService.listChangedEvent.emit(listofPosts);\n    }));\n  }\n};\nBackEndService = __decorate([Injectable({\n  providedIn: 'root'\n})], BackEndService);","map":{"version":3,"names":["BackEndService","constructor","postService","http","saveData","listofPosts","getPost","put","subscribe","res","console","log","setPosts","fetchData","get","pipe","tap","forEach","post","Array","isArray","comments","listChangedEvent","emit","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\back-end.service.ts"],"sourcesContent":["@Injectable({\n  providedIn: 'root'\n})\nexport class BackEndService {\n\n  constructor(private postService: PostService, private http: HttpClient) { }\n\n  saveData(){\n    const listofPosts: Post[] = this.postService.getPost();\n    this.http.put('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json', listofPosts)\n    .subscribe((res) => {\n      console.log(res);\n      // Call setPosts after saving the new post\n      this.postService.setPosts(listofPosts);\n    })\n  }\n\n  fetchData(): Observable<Post[]> {\n    return this.http.get<Post[]>('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json')\n      .pipe(tap((listofPosts: Post[])=> {\n        console.log(listofPosts)\n\n        listofPosts.forEach(post => {\n          if (!Array.isArray(post.comments)) {\n            post.comments = [];\n          }\n        });\n        \n        this.postService.setPosts(listofPosts);\n        this.postService.listChangedEvent.emit(listofPosts);\n      }));\n  }\n}"],"mappings":";AAGO,WAAMA,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,WAAwB,EAAUC,IAAgB;IAAlD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAE1EC,QAAQA,CAAA;IACN,MAAMC,WAAW,GAAW,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE;IACtD,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,yFAAyF,EAAEF,WAAW,CAAC,CACpHG,SAAS,CAAEC,GAAG,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;MACA,IAAI,CAACP,WAAW,CAACU,QAAQ,CAACP,WAAW,CAAC;IACxC,CAAC,CAAC;EACJ;EAEAQ,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAS,yFAAyF,CAAC,CACpHC,IAAI,CAACC,GAAG,CAAEX,WAAmB,IAAG;MAC/BK,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;MAExBA,WAAW,CAACY,OAAO,CAACC,IAAI,IAAG;QACzB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,QAAQ,CAAC,EAAE;UACjCH,IAAI,CAACG,QAAQ,GAAG,EAAE;;MAEtB,CAAC,CAAC;MAEF,IAAI,CAACnB,WAAW,CAACU,QAAQ,CAACP,WAAW,CAAC;MACtC,IAAI,CAACH,WAAW,CAACoB,gBAAgB,CAACC,IAAI,CAAClB,WAAW,CAAC;IACrD,CAAC,CAAC,CAAC;EACP;CACD;AA7BYL,cAAc,GAAAwB,UAAA,EAH1BC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACW1B,cAAc,CA6B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}