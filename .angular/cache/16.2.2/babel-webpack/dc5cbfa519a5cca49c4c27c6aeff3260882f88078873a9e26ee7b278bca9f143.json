{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Post } from '../post.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PostEditComponent_h3_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 3);\n    i0.ɵɵtext(1, \"Create Post\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostEditComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 3);\n    i0.ɵɵtext(1, \"Edit Post\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostEditComponent {\n  constructor(postService, router, actRoute) {\n    this.postService = postService;\n    this.router = router;\n    this.actRoute = actRoute;\n    this.index = 0;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe(params => {\n      if (params['index']) {\n        console.log(params['index']);\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    });\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post = new Post(title, imgPath, description, 'JC JC JC', new Date(), 0);\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    } else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list']);\n  }\n}\n_class = PostEditComponent;\n_class.ɵfac = function PostEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post-edit\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[\"class\", \"font-weight-bold\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"font-weight-bold\"], [\"type\", \"text\", \"placeholder\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"image path\", \"formControlName\", \"imgPath\", 1, \"form-control\"], [1, \"img-responsive\", 3, \"src\"], [\"type\", \"text\", \"placeholder\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"font-weight-bold\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-danger\", \"font-weight-bold\"]],\n  template: function PostEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PostEditComponent_h3_0_Template, 2, 0, \"h3\", 0);\n      i0.ɵɵtemplate(1, PostEditComponent_h3_1_Template, 2, 0, \"h3\", 0);\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PostEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Image Path\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5)(11, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 3);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 8);\n      i0.ɵɵtext(17, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" | \");\n      i0.ɵɵelementStart(19, \"button\", 9);\n      i0.ɵɵtext(20, \"Clear\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"hr\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.editMode == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editMode == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.form.value.imgPath, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{\\n  border: 1px solid #d44d09;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdC1lZGl0L3Bvc3QtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkLCB0ZXh0YXJlYS5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2Q0NGQwOTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","Post","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostEditComponent","constructor","postService","router","actRoute","index","editMode","ngOnInit","title","imgPath","description","params","subscribe","console","log","postSpec","getSpecPost","form","required","onSubmit","value","post","Date","updatePost","addPost","backEndService","saveData","navigate","ɵɵdirectiveInject","i1","PostService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","PostEditComponent_Template","rf","ctx","ɵɵtemplate","PostEditComponent_h3_0_Template","PostEditComponent_h3_1_Template","ɵɵlistener","PostEditComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵsanitizeUrl","invalid"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post-edit\\post-edit.component.ts","C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post-edit\\post-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../post.service';\nimport { Post } from '../post.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n  index: number = 0;\n  form!: FormGroup;\n  editMode = false;\n  constructor(private postService: PostService, private router: Router,\n    private actRoute: ActivatedRoute) { }\n  ngOnInit(): void {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe((params: Params) => {\n      if (params['index']) {\n        console.log(params['index'])\n\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    }\n    );\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post: Post = new Post(\n      title, imgPath, description, 'JC JC JC', new Date(), 0\n    );\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    }\n    else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list'])\n  }\n}","<h3 class=\"font-weight-bold\" *ngIf=\"editMode == false\">Create Post</h3>\n<h3 class=\"font-weight-bold\" *ngIf=\"editMode == true\">Edit Post</h3>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label class=\"font-weight-bold\">Title</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"title\"\n      formControlName=\"title\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label class=\"font-weight-bold\">Image Path</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"image path\"\n      formControlName=\"imgPath\"\n    />\n    <img class=\"img-responsive\" src=\"{{ form.value.imgPath }}\" />\n  </div>\n  <div class=\"form-group\">\n    <label class=\"font-weight-bold\">Description</label>\n    <textarea\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"description\"\n      formControlName=\"description\"\n    ></textarea>\n  </div>\n\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary font-weight-bold\"\n    [disabled]=\"form.invalid\"\n  >\n    Save\n  </button>\n  |\n  <button type=\"reset\" class=\"btn btn-danger font-weight-bold\">Clear</button>\n</form>\n<hr />"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}