{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/gutie/angularProjects/crud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(afAuth, router) {\n    this.afAuth = afAuth;\n    this.router = router;\n    this.user$ = afAuth.authState;\n  }\n  login(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n  register(email, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this.afAuth.createUserWithEmailAndPassword(email, password);\n        console.log('User registered: ', result.user);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }\n  logout() {\n    // Clear user token and other info\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","afAuth","router","user$","authState","login","email","password","signInWithEmailAndPassword","register","_this","_asyncToGenerator","result","createUserWithEmailAndPassword","console","log","user","error","logout","localStorage","removeItem","navigate","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["// auth.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user$: Observable<firebase.default.User | null>;\r\n  getAuthState: any;\r\n\r\n  constructor(private afAuth: AngularFireAuth,private router: Router) {\r\n    this.user$ = afAuth.authState;\r\n  }\r\n\r\n  login(email: string, password: string): Promise<firebase.default.auth.UserCredential> {\r\n      return this.afAuth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  async register(email: string, password: string) {\r\n    try {\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(email, password);\r\n      console.log('User registered: ', result.user);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  logout() {\r\n    // Clear user token and other info\r\n    localStorage.removeItem('currentUser');\r\n    this.router.navigate(['/login']);\r\n  }\r\n  }\r\n\r\n"],"mappings":";;;;;AASA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,MAAuB,EAASC,MAAc;IAA9C,KAAAD,MAAM,GAANA,MAAM;IAA0B,KAAAC,MAAM,GAANA,MAAM;IACxD,IAAI,CAACC,KAAK,GAAGF,MAAM,CAACG,SAAS;EAC/B;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACjC,OAAO,IAAI,CAACN,MAAM,CAACO,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAClE;EAEME,QAAQA,CAACH,KAAa,EAAEC,QAAgB;IAAA,IAAAG,KAAA;IAAA,OAAAC,iBAAA;MAC5C,IAAI;QACF,MAAMC,MAAM,SAASF,KAAI,CAACT,MAAM,CAACY,8BAA8B,CAACP,KAAK,EAAEC,QAAQ,CAAC;QAChFO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAACI,IAAI,CAAC;OAC9C,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EACAC,MAAMA,CAAA;IACJ;IACAC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IACtC,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;SAxBWtB,WAAW;;mBAAXA,MAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX5B,MAAW;EAAA6B,OAAA,EAAX7B,MAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}