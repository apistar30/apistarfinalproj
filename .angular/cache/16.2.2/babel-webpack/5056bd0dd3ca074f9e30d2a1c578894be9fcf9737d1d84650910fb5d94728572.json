{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Post } from '../post.model';\nexport let PostEditComponent = class PostEditComponent {\n  constructor(postService, router, backEndService, actRoute) {\n    this.postService = postService;\n    this.router = router;\n    this.backEndService = backEndService;\n    this.index = 0;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe(params => {\n      if (params['index']) {\n        console.log(params['index']);\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    });\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post = new Post(title, imgPath, description, 'JC JC JC', new Date(), 0);\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    } else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list']);\n  }\n};\nPostEditComponent = __decorate([Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})], PostEditComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","Post","PostEditComponent","constructor","postService","router","backEndService","actRoute","index","editMode","ngOnInit","title","imgPath","description","params","subscribe","console","log","postSpec","getSpecPost","form","required","onSubmit","value","post","Date","updatePost","addPost","saveData","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\post-edit\\post-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../post.service';\nimport { Post } from '../post.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { BackEndService } from '../back-end.service';\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n  index: number = 0;\n  form!: FormGroup;\n  editMode = false;\n  constructor(private postService: PostService, private router: Router,\n   private backEndService: private actRoute: ActivatedRoute) { }\n  ngOnInit(): void {\n    let title = '';\n    let imgPath = '';\n    let description = '';\n    this.actRoute.params.subscribe((params: Params) => {\n      if (params['index']) {\n        console.log(params['index'])\n\n        const postSpec = this.postService.getSpecPost(this.index);\n        title = postSpec.title;\n        imgPath = postSpec.imgPath;\n        description = postSpec.description;\n        this.editMode = true;\n      }\n    }\n    );\n    this.form = new FormGroup({\n      title: new FormControl(title, [Validators.required]),\n      imgPath: new FormControl(imgPath, [Validators.required]),\n      description: new FormControl(description, [Validators.required])\n    });\n  }\n  onSubmit() {\n    const title = this.form.value.title;\n    const imgPath = this.form.value.imgPath;\n    const description = this.form.value.description;\n    const post: Post = new Post(\n      title, imgPath, description, 'JC JC JC', new Date(), 0\n    );\n    if (this.editMode == true) {\n      this.postService.updatePost(this.index, post);\n    }\n    else {\n      //submit\n      this.postService.addPost(post);\n    }\n    this.backEndService.saveData();\n    this.router.navigate(['post-list'])\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,IAAI,QAAQ,eAAe;AAQ7B,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,WAAwB,EAAUC,MAAc,EAC3DC,cAAuB,EAACC,QAAwB;IADrC,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IACnD,KAAAC,cAAc,GAAdA,cAAc;IAJvB,KAAAE,KAAK,GAAW,CAAC;IAEjB,KAAAC,QAAQ,GAAG,KAAK;EAE6C;EAC7DC,QAAQA,CAAA;IACN,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAI,CAACN,QAAQ,CAACO,MAAM,CAACC,SAAS,CAAED,MAAc,IAAI;MAChD,IAAIA,MAAM,CAAC,OAAO,CAAC,EAAE;QACnBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,OAAO,CAAC,CAAC;QAE5B,MAAMI,QAAQ,GAAG,IAAI,CAACd,WAAW,CAACe,WAAW,CAAC,IAAI,CAACX,KAAK,CAAC;QACzDG,KAAK,GAAGO,QAAQ,CAACP,KAAK;QACtBC,OAAO,GAAGM,QAAQ,CAACN,OAAO;QAC1BC,WAAW,GAAGK,QAAQ,CAACL,WAAW;QAClC,IAAI,CAACJ,QAAQ,GAAG,IAAI;;IAExB,CAAC,CACA;IACD,IAAI,CAACW,IAAI,GAAG,IAAItB,SAAS,CAAC;MACxBa,KAAK,EAAE,IAAIZ,WAAW,CAACY,KAAK,EAAE,CAACX,UAAU,CAACqB,QAAQ,CAAC,CAAC;MACpDT,OAAO,EAAE,IAAIb,WAAW,CAACa,OAAO,EAAE,CAACZ,UAAU,CAACqB,QAAQ,CAAC,CAAC;MACxDR,WAAW,EAAE,IAAId,WAAW,CAACc,WAAW,EAAE,CAACb,UAAU,CAACqB,QAAQ,CAAC;KAChE,CAAC;EACJ;EACAC,QAAQA,CAAA;IACN,MAAMX,KAAK,GAAG,IAAI,CAACS,IAAI,CAACG,KAAK,CAACZ,KAAK;IACnC,MAAMC,OAAO,GAAG,IAAI,CAACQ,IAAI,CAACG,KAAK,CAACX,OAAO;IACvC,MAAMC,WAAW,GAAG,IAAI,CAACO,IAAI,CAACG,KAAK,CAACV,WAAW;IAC/C,MAAMW,IAAI,GAAS,IAAIvB,IAAI,CACzBU,KAAK,EAAEC,OAAO,EAAEC,WAAW,EAAE,UAAU,EAAE,IAAIY,IAAI,EAAE,EAAE,CAAC,CACvD;IACD,IAAI,IAAI,CAAChB,QAAQ,IAAI,IAAI,EAAE;MACzB,IAAI,CAACL,WAAW,CAACsB,UAAU,CAAC,IAAI,CAAClB,KAAK,EAAEgB,IAAI,CAAC;KAC9C,MACI;MACH;MACA,IAAI,CAACpB,WAAW,CAACuB,OAAO,CAACH,IAAI,CAAC;;IAEhC,IAAI,CAAClB,cAAc,CAACsB,QAAQ,EAAE;IAC9B,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;CACD;AA7CY3B,iBAAiB,GAAA4B,UAAA,EAL7BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW/B,iBAAiB,CA6C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}