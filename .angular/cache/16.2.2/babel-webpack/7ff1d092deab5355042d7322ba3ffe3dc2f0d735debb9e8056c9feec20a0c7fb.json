{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthGuardCOm = class AuthGuardCOm {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n};\nAuthGuardCOm = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuardCOm);","map":{"version":3,"names":["Injectable","AuthGuardCOm","constructor","authService","router","canActivate","route","state","isLoggedIn","navigate","__decorate","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth-guard\\auth-guard.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardCOm implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EACvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;CAED;AAdYR,YAAY,GAAAS,UAAA,EAHxBV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWV,YAAY,CAcxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}