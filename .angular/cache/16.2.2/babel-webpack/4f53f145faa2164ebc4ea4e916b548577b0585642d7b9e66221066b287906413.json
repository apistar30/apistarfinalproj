{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n  constructor() {\n    this.loggedIn = new BehaviorSubject(false);\n  }\n  login() {\n    this.loggedIn.next(true);\n  }\n  logout() {\n    this.loggedIn.next(false);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","AuthService","isLoggedIn","loggedIn","asObservable","constructor","login","next","logout","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gutie\\angularProjects\\crud\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private loggedIn = new BehaviorSubject<boolean>(false);\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  login() {\r\n    this.loggedIn.next(true);\r\n  }\r\n\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n  }\r\n}"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAGtB,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACC,QAAQ,CAACC,YAAY,EAAE;EACrC;EAEAC,YAAA;IANQ,KAAAF,QAAQ,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EAMtC;EAEhBM,KAAKA,CAAA;IACH,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC,IAAI,CAAC;EAC1B;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACL,QAAQ,CAACI,IAAI,CAAC,KAAK,CAAC;EAC3B;;SAfWN,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAQ,OAAA,EAAXR,MAAW,CAAAS,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}